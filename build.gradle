import org.springframework.boot.gradle.run.BootRunTask
dddddddddddddddddddd
buildscript {
	ext {
		kotlinVersion = '1.1.51'
		springBootVersion = '1.5.7.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'idea'
apply plugin: 'war'

group = 'org.t246osslab'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = 1.8
war.archiveName "ROOT.war"

compileKotlin {
	kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
	kotlinOptions.jvmTarget = "1.8"
}

repositories {
	mavenCentral()
}

configurations {
    providedRuntime
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-data-ldap')
    compile('org.springframework.boot:spring-boot-starter-jdbc')
    compile('org.springframework.boot:spring-boot-starter-mail')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('com.sun.mail:javax.mail:1.5.1')
    compile('com.unboundid:unboundid-ldapsdk')
    compile('javax.servlet:jstl')
    compile('mysql:mysql-connector-java')
    compile('org.apache.tomcat.embed:tomcat-embed-jasper')
    compile('org.apache.derby:derby:10.13.1.1')
    compile('org.apache.commons:commons-lang3:3.0')
    compile('org.owasp.esapi:esapi:2.1.0.1')
    compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    runtime('org.springframework.boot:spring-boot-devtools')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
}

bootRun {
    jvmArgs = [
            "-Xmx256m",
            "-XX:MaxMetaspaceSize=128m",
            "-XX:MaxDirectMemorySize=90m",
            "-Xloggc:logs/gc_%p_%t.log",
            "-XX:+UseSerialGC",
            "-XX:+PrintHeapAtGC",
            "-XX:+PrintGCDetails",
            "-XX:+PrintGCDateStamps",
            "-XX:+UseGCLogFileRotation",
            "-XX:NumberOfGCLogFiles=5",
            "-XX:GCLogFileSize=10M",
            "-XX:GCTimeLimit=15",
            "-XX:GCHeapFreeLimit=50",
            "-XX:+HeapDumpOnOutOfMemoryError",
            "-XX:HeapDumpPath=logs/",
            "-XX:ErrorFile=logs/hs_err_pid%p.log",
            "-XX:NativeMemoryTracking=summary",
            // Auto kill JVM when OOME occurs: For post-8u92 JDKs
            // "-XX:+CrashOnOutOfMemoryError",
            // Auto kill JVM when OOME occurs: For Linux
            // "-XX:OnOutOfMemoryError="kill -9 %p"",
            // Auto kill JVM when OOME occurs: For Windows
            // "-XX:OnOutOfMemoryError=taskkill /F /PID %p",
            // UnlockCommercialFeatures/FlightRecorder: For Oracle Java commercial use
            // "-XX:+UnlockCommercialFeatures -XX:+FlightRecorder",
            "-agentlib:jdwp=transport=dt_socket,server=y,address=9009,suspend=n",
            "-Dderby.stream.error.file=logs/derby.log",
            "-Dderby.infolog.append=true",
            "-Dderby.language.logStatementText=true",
            "-Dderby.locks.deadlockTrace=true",
            "-Dderby.locks.monitor=true",
            "-Dderby.storage.rowLocking=true",
            "-Dcom.sun.management.jmxremote",
            "-Dcom.sun.management.jmxremote.port=7900",
            "-Dcom.sun.management.jmxremote.ssl=false",
            "-Dcom.sun.management.jmxremote.authenticate=false",
            // -Djava.security.manager",
            // -Djava.security.policy=catalina.policy",
            // -Deasybuggy.mode=only-vulnerabilities",
            "-ea"
    ]
}
